theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
rect = element_blank())
boston %>%
ggplot()+
geom_sf()+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
rect = element_blank())
boston_clean <- boston %>%
left_join(city_data %>% select(`2019 Population`, `2019 Income`), by = c("TOWN" = "City")) %>%
left_join(town_data %>% select(poverty_2019), by = c("TOWN" = "city")) %>%
mutate(per_growth_70_19 = (`2019 Population` - POP1970)/POP1970,
median_income_19 = `2019 Income`,
pov_rate_2019 = poverty_2019)
boston_clean <- boston %>%
left_join(city_data %>% select(City, `2019 Population`, `2019 Income`), by = c("TOWN" = "City")) %>%
left_join(town_data %>% select(city, poverty_2019), by = c("TOWN" = "city")) %>%
mutate(per_growth_70_19 = (`2019 Population` - POP1970)/POP1970,
median_income_19 = `2019 Income`,
pov_rate_2019 = poverty_2019)
towndata_clean <- towndata %>%
mutate(pop_dens_2019 = pop_2019/land_area) %>%
head(145)
View(towndata_clean)
towndata <- read_excel("Urban Econ 2022 Assignment 2 Data.xlsx", skip = 5, col_names = F)
colnames(towndata) <- c("city","land_area","distance_cbd",
"pop_1970", "pop_1990", "pop_2000", "pop_2010","pop_2019",
"income_1990", "income_2000", "income_2010", "income_2019",
"poverty_2019")
towndata_clean <- towndata %>%
mutate(pop_dens_2019 = pop_2019/land_area) %>%
head(144)
boston_clean <- boston %>%
left_join(city_data %>% select(City, `2019 Population`, `2019 Income`), by = c("TOWN" = "City")) %>%
left_join(town_data %>% select(city, poverty_2019), by = c("TOWN" = "city")) %>%
mutate(per_growth_70_19 = (`2019 Population` - POP1970)/POP1970,
median_income_19 = `2019 Income`,
pov_rate_2019 = poverty_2019)
boston_clean <- boston %>%
left_join(city_data %>% select(City, `2019 Population`, `2019 Income`, `2019 Poverty`), by = c("TOWN" = "City")) %>%
mutate(per_growth_70_19 = (`2019 Population` - POP1970)/POP1970,
median_income_19 = `2019 Income`,
pov_rate_2019 = as.double(str_sub(`2019 Poverty`, start = 1, end = -2))/100)
View(boston_clean)
boston_clean %>%
ggplot()+
geom_sf(mapping = aes(fill = per_growth_70_19))+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
rect = element_blank())
boston_clean %>%
ggplot()+
geom_sf(mapping = aes(fill = per_growth_70_19))+
scale_fill_gradient(labels = scales::percent)
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
rect = element_blank())
boston_clean %>%
ggplot()+
geom_sf(mapping = aes(fill = per_growth_70_19))+
scale_fill_gradient(labels = scales::percent)
#theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
rect = element_blank())
boston_clean %>%
ggplot()+
geom_sf(mapping = aes(fill = per_growth_70_19))+
scale_fill_gradient(labels = scales::percent)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
rect = element_blank())
View(boston_clean)
boston_clean %>%
ggplot()+
geom_sf(mapping = aes(fill = per_growth_70_19))+
scale_fill_gradient(labels = scales::percent)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
rect = element_blank(),
legend.title = element_blank())
boston_clean %>%
ggplot()+
geom_sf(mapping = aes(fill = per_growth_70_19))+
scale_fill_gradient(labels = scales::percent)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
rect = element_blank(),
legend.title = element_blank())+
labs(title = "Percent Growth in Population, Boston Metro Area",
subtitle = "1970-2019",
caption = "Source: Decennial Census and American Community Survey")
boston_clean %>%
ggplot()+
geom_sf(mapping = aes(fill = median_income_19))+
scale_fill_gradient(labels = scales::dollar)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
rect = element_blank(),
legend.title = element_blank())+
labs(title = "Median Income By City, Boston Metro Area",
subtitle = "2019",
caption = "Source: American Community Survey")
boston_clean %>%
ggplot()+
geom_sf(mapping = aes(fill = pov_rate_2019))+
scale_fill_gradient(labels = scales::percent)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
rect = element_blank(),
legend.title = element_blank())+
labs(title = "Poverty Rate, Boston Metro Area Cities",
subtitle = "2019",
caption = "Source: Decennial Census and American Community Survey")
demand()
library(tidyverse)
library(DT)
library(readxl)
library(kableExtra)
library(sf)
library(geojsonsf)
library(econocharts)
demand()
?demand
demand(ncurves = 2)
demand(ncurves = 2,
names = "D[1]")
sdcurve()
indifference()
indifference(xlab = "Land Rent",
ylab = "Distance to CBD")
indifference(ylab = "Land Rent",
xlab = "Distance to CBD")
indifference(ylab = "Land Rent",
xlab = "Distance to CBD",
ncurves = 2)
indifference(ylab = "Land Rent",
xlab = "Distance to CBD",
ncurves = 2,
names = c("D1", "D2"))
library(tidyverse)
library(DT)
library(readxl)
library(kableExtra)
library(sf)
library(geojsonsf)
library(econocharts)
towndata <- read_excel("Urban Econ 2022 Assignment 2 Data.xlsx", skip = 5, col_names = F)
colnames(towndata) <- c("city","land_area","distance_cbd",
"pop_1970", "pop_1990", "pop_2000", "pop_2010","pop_2019",
"income_1990", "income_2000", "income_2010", "income_2019",
"poverty_2019")
towndata_clean <- towndata %>%
mutate(pop_dens_2019 = pop_2019/land_area) %>%
head(144)
towndata_clean %>%
ggplot(mapping = aes(x = distance_cbd, y = pop_dens_2019))+
geom_point() +
scale_x_continuous(expand = expand_scale(mult = c(0.002, 0)),
limits = c(0, 60),
breaks = 1:6 *10
) +
scale_y_continuous(expand = expand_scale(mult = c(0, 0.002)),
limits = c(0, 20000),
breaks = 1:8 * 5000
) +
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(method='lm')+
labs(x = "Distance to City center (mile)",
y = "Population density (People/square mile)",
title = "Distance to the City Center in Massachusetts Cities and Population Density, 2019")
towndata_clean %>%
ggplot(mapping = aes(x = distance_cbd, y = income_2019))+
geom_point() +
scale_x_continuous(expand = expand_scale(mult = c(0.002, 0)),
limits = c(0, 60),
breaks = 1:6 *10
) +
scale_y_continuous(expand = expand_scale(mult = c(0, 0.002)),
limits = c(0, 260000),
breaks = 1:8 * 50000
) +
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(method='lm')+
labs(x = "Distance to City center (mile)",
y = "Median Income",
title = "Distance to the City Center in Massachusetts Cities and Median Income, 2019")
towndata_clean %>%
ggplot(mapping = aes(x = distance_cbd, y = poverty_2019))+
geom_point() +
scale_x_continuous(expand = expand_scale(mult = c(0.002, 0)),
limits = c(0, 60),
breaks = 1:6 *10
) +
scale_y_continuous(expand = expand_scale(mult = c(0, 0.002)),
limits = c(0, .25),
breaks = 1:8 * .05,
labels = scales::percent
) +
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(method='lm')+
labs(x = "Distance to City Center (mile)",
y = "Poverty Rate",
title = "Distance to the City Center in Massachusetts Cities and Poverty Rate, 2019")
close_sum <- towndata_clean %>%
mutate(`Distance to Boston` = if_else(distance_cbd <=15, "< 15 Miles", "> 15 Miles")) %>%
group_by(`Distance to Boston`) %>%
summarize(`Population 1970` = scales::comma(sum(pop_1970)),
`Population 1990` = scales::comma(sum(pop_1990)),
`Population 2000` = scales::comma(sum(pop_2000)),
`Population 2019` = scales::comma(sum(pop_2019)),
)
close_sum %>%
kable()
scales::percent((close_sum[[1,3]]-close_sum[[1,2]])/close_sum[[1,2]])
close_sum[[1,3]]
close_sum <- towndata_clean %>%
mutate(`Distance to Boston` = if_else(distance_cbd <=15, "< 15 Miles", "> 15 Miles")) %>%
group_by(`Distance to Boston`) %>%
summarize(`Population 1970` = (sum(pop_1970)),
`Population 1990` = (sum(pop_1990)),
`Population 2000` = (sum(pop_2000)),
`Population 2019` = (sum(pop_2019)),
)
close_sum %>%
transmute(`Population 1970` = scales::comma(`Population 1970`),
`Population 1990` = scales::comma(`Population 1990`),
`Population 2000` = scales::comma(`Population 2000`),
`Population 2019` = scales::comma(`Population 2019`)) %>%
kable()
scales::percent((close_sum[[1,3]]-close_sum[[1,2]])/close_sum[[1,2]])
![Bid Rent Curve #3](bidrent4.png)
library(tidyverse)
library(DT)
library(readxl)
library(kableExtra)
library(sf)
library(geojsonsf)
library(econocharts)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(DT)
library(readxl)
library(kableExtra)
library(sf)
library(geojsonsf)
library(econocharts)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.pos = "h", out.extra = "")
library(tidyverse)
library(DT)
library(readxl)
library(kableExtra)
library(sf)
library(geojsonsf)
library(econocharts)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(fig.pos = "h", out.extra = "")
towndata <- read_excel("Urban Econ 2022 Assignment 2 Data.xlsx", skip = 5, col_names = F)
colnames(towndata) <- c("city","land_area","distance_cbd",
"pop_1970", "pop_1990", "pop_2000", "pop_2010","pop_2019",
"income_1990", "income_2000", "income_2010", "income_2019",
"poverty_2019")
towndata_clean <- towndata %>%
mutate(pop_dens_2019 = pop_2019/land_area) %>%
head(144)
towndata_clean %>%
ggplot(mapping = aes(x = distance_cbd, y = pop_dens_2019))+
geom_point() +
scale_x_continuous(expand = expand_scale(mult = c(0.002, 0)),
limits = c(0, 60),
breaks = 1:6 *10
) +
scale_y_continuous(expand = expand_scale(mult = c(0, 0.002)),
limits = c(0, 20000),
breaks = 1:8 * 5000
) +
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(method='lm')+
labs(x = "Distance to City center (mile)",
y = "Population density (People/square mile)",
title = "Distance to the City Center in Massachusetts Cities and Population Density, 2019")
towndata_clean %>%
ggplot(mapping = aes(x = distance_cbd, y = income_2019))+
geom_point() +
scale_x_continuous(expand = expand_scale(mult = c(0.002, 0)),
limits = c(0, 60),
breaks = 1:6 *10
) +
scale_y_continuous(expand = expand_scale(mult = c(0, 0.002)),
limits = c(0, 260000),
breaks = 1:8 * 50000
) +
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(method='lm')+
labs(x = "Distance to City center (mile)",
y = "Median Income",
title = "Distance to the City Center in Massachusetts Cities and Median Income, 2019")
towndata_clean %>%
ggplot(mapping = aes(x = distance_cbd, y = poverty_2019))+
geom_point() +
scale_x_continuous(expand = expand_scale(mult = c(0.002, 0)),
limits = c(0, 60),
breaks = 1:6 *10
) +
scale_y_continuous(expand = expand_scale(mult = c(0, 0.002)),
limits = c(0, .25),
breaks = 1:8 * .05,
labels = scales::percent
) +
stat_summary(fun.data= mean_cl_normal) +
geom_smooth(method='lm')+
labs(x = "Distance to City Center (mile)",
y = "Poverty Rate",
title = "Distance to the City Center in Massachusetts Cities and Poverty Rate, 2019")
close_sum <- towndata_clean %>%
mutate(`Distance to Boston` = if_else(distance_cbd <=15, "< 15 Miles", "> 15 Miles")) %>%
group_by(`Distance to Boston`) %>%
summarize(`Population 1970` = (sum(pop_1970)),
`Population 1990` = (sum(pop_1990)),
`Population 2000` = (sum(pop_2000)),
`Population 2019` = (sum(pop_2019)),
)
close_sum %>%
transmute(`Population 1970` = scales::comma(`Population 1970`),
`Population 1990` = scales::comma(`Population 1990`),
`Population 2000` = scales::comma(`Population 2000`),
`Population 2019` = scales::comma(`Population 2019`)) %>%
kable()
inc_sum <- towndata_clean %>%
mutate(`Distance to Boston` = factor(case_when(
distance_cbd <=5 ~ "less than 5 miles",
distance_cbd <=10 & distance_cbd >5 ~ "5-10 miles",
distance_cbd <=15 & distance_cbd >10 ~ "10-15 miles",
distance_cbd >15 ~ "beyond 15 miles",
),
levels = c("less than 5 miles", "5-10 miles","10-15 miles","beyond 15 miles")),
pct_change_inc_90_00 = (income_2000-income_1990)/income_1990,
pct_change_inc_10_19 = (income_2019-income_2010)/income_2010,
) %>%
group_by(`Distance to Boston`) %>%
summarize(`Average Change in Median Income 1990-2000` = scales::percent(mean(pct_change_inc_90_00)),
`Average Change in Median Income 2010-2019` = scales::percent(mean(pct_change_inc_10_19)),
)
inc_sum %>%
kable()
boston <- st_read("Boston MSA")
towns <- st_read("Towns")
city_data <- read_csv("ue-assign2-qgis-data.csv")
boston_clean <- boston %>%
left_join(city_data %>% select(City, `2019 Population`, `2019 Income`, `2019 Poverty`), by = c("TOWN" = "City")) %>%
mutate(per_growth_70_19 = (`2019 Population` - POP1970)/POP1970,
median_income_19 = `2019 Income`,
pov_rate_2019 = as.double(str_sub(`2019 Poverty`, start = 1, end = -2))/100)
boston_clean %>%
ggplot()+
geom_sf(mapping = aes(fill = per_growth_70_19))+
scale_fill_gradient(labels = scales::percent)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
rect = element_blank(),
legend.title = element_blank())+
labs(title = "Percent Growth in Population, Boston Metro Area Cities",
subtitle = "1970-2019",
caption = "Source: Decennial Census and American Community Survey")
boston_clean %>%
ggplot()+
geom_sf(mapping = aes(fill = median_income_19))+
scale_fill_gradient(labels = scales::dollar)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
rect = element_blank(),
legend.title = element_blank())+
labs(title = "Median Income By City, Boston Metro Area",
subtitle = "2019",
caption = "Source: American Community Survey")
boston_clean %>%
ggplot()+
geom_sf(mapping = aes(fill = pov_rate_2019))+
scale_fill_gradient(labels = scales::percent)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
rect = element_blank(),
legend.title = element_blank())+
labs(title = "Poverty Rate, Boston Metro Area Cities",
subtitle = "2019",
caption = "Source: Decennial Census and American Community Survey")
library(urbnthemes)
boston_clean %>%
ggplot()+
geom_sf(mapping = aes(fill = per_growth_70_19))+
scale_fill_gradient(labels = scales::percent)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
rect = element_blank(),
legend.title = element_blank())+
labs(title = "Percent Growth in Population, Boston Metro Area Cities",
subtitle = "1970-2019",
caption = "Source: Decennial Census and American Community Survey")
urbn_color_pal()
palette_urbn_cyan
?scale_fill_gradient
?scale_fill_gradientn
palette_urbn_cyan
boston_clean %>%
ggplot()+
geom_sf(mapping = aes(fill = per_growth_70_19))+
scale_fill_gradientn(colors = palette_urbn_cyan, labels = scales::percent)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
rect = element_blank(),
legend.title = element_blank())+
labs(title = "Percent Growth in Population, Boston Metro Area Cities",
subtitle = "1970-2019",
caption = "Source: Decennial Census and American Community Survey")
boston_clean %>%
ggplot()+
geom_sf(mapping = aes(fill = pov_rate_2019))+
scale_fill_gradientn(colors = palette_urbn_cyan, labels = scales::percent)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
rect = element_blank(),
legend.title = element_blank())+
labs(title = "Poverty Rate, Boston Metro Area Cities",
subtitle = "2019",
caption = "Source: Decennial Census and American Community Survey")
boston_clean %>%
ggplot()+
geom_sf(mapping = aes(fill = median_income_19))+
scale_fill_gradientn(colors = palette_urbn_cyan, labels = scales::dollar)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
rect = element_blank(),
legend.title = element_blank())+
labs(title = "Median Income By City, Boston Metro Area",
subtitle = "2019",
caption = "Source: American Community Survey")
close_sum <- towndata_clean %>%
mutate(`Distance to Boston` = if_else(distance_cbd <=15, "< 15 Miles", "> 15 Miles")) %>%
group_by(`Distance to Boston`) %>%
summarize(`Population 1970` = (sum(pop_1970)),
`Population 1990` = (sum(pop_1990)),
`Population 2000` = (sum(pop_2000)),
`Population 2019` = (sum(pop_2019)),
)
close_sum %>%
transmute(`Distance to Boston` = `Distance to Boston`,
`Population 1970` = scales::comma(`Population 1970`),
`Population 1990` = scales::comma(`Population 1990`),
`Population 2000` = scales::comma(`Population 2000`),
`Population 2019` = scales::comma(`Population 2019`)) %>%
kable()
close_sum[[1,4]]
scales::percent((close_sum[[1,4]]-close_sum[[1,3]])/close_sum[[1,3]])
scales::percent((close_sum[[1,4]]-close_sum[[1,2]])/close_sum[[1,2]])
close_sum[[1,4]]
close_sum[[1,3]]
close_sum[[1,4]]
close_sum[[1,5]]
close_sum[[1,3]]
scales::percent((close_sum[[1,5]]-close_sum[[1,3]])/close_sum[[1,3]])
scales::percent((close_sum[[2,5]]-close_sum[[2,3]])/close_sum[[2,3]])
scales::percent((close_sum[[2,3]]-close_sum[[2,2]])/close_sum[[2,2]])
